{"version":3,"file":"static/js/947.b8096684.chunk.js","mappings":"kOAeA,SAASA,EAAoBC,GAC3B,OAAOC,KAAKC,MAAOF,EAAQ,GAAM,IAClC,CA8DD,UA5DA,WACE,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAoDE,EAAAA,EAAAA,MAA5CC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAAiBC,EAAvC,EAAuCA,SAEjCC,GAAcC,EAAAA,EAAAA,UAClB,kBAAMC,EAAAA,EAAAA,IAAgB,CAAEC,GAAIT,GAA5B,GACA,CAACA,IAiBH,OAdAU,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAE0BJ,EAF1B,OAEUK,EAFV,OAGIP,EAAgBO,GAHpB,gDAKIC,QAAQC,MAAM,gCAAiC,KAAMC,SALzD,0DAFc,sBACTd,GADS,mCAWde,EACD,GAAE,CAACT,EAAaN,EAAUI,IAC3BQ,QAAQI,IAAIX,EAASY,MAAMC,OAEzB,iCACE,SAAC,KAAD,CAAeC,GAAId,EAASY,MAAMC,KAAOb,EAASY,MAAMC,KAAO,IAA/D,UACE,SAAC,KAAD,yBAGF,SAAC,KAAD,CACEE,IACEjB,EAAakB,YAAb,0CACqClB,EAAakB,cAEhD,sCAGJC,MAAO,OAET,SAAC,KAAD,UAAWnB,EAAaoB,kBACxB,UAAC,KAAD,CAAY1B,MAAOD,EAAoBO,EAAaqB,cAApD,yBACe5B,EAAoBO,EAAaqB,cADhD,QAGA,UAAC,KAAD,wBAA0BrB,EAAasB,aACvC,UAAC,KAAD,sCAEE,SAAC,KAAD,CAAeN,GAAG,OAAOF,MAAO,CAAEC,KAAMb,EAASY,MAAMC,MAAvD,UACE,SAAC,KAAD,uBAEF,SAAC,KAAD,CAAeC,GAAG,UAAUF,MAAO,CAACC,KAAMb,EAASY,MAAMC,MAAzD,UACE,SAAC,KAAD,6BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useMemo, Suspense } from 'react';\nimport { getMovieDetails } from 'Api/Movie.js';\nimport { Outlet, useParams } from 'react-router-dom';\nimport {\n  Btn,\n  Img,\n  List,\n  MainText,\n  Paragraph,\n  SecondaryText,\n  StyledNavLink,\n  UserScored,\n} from 'ui/everyUi.styled';\nimport { UseGlobalContext } from 'Context/stateContext';\n\nfunction calculatePercentage(score) {\n  return Math.round((score / 10) * 100);\n}\n\nfunction MovieDetails() {\n  const { movie_id } = useParams();\n  const { movieDetails, setMovieDetails, location } = UseGlobalContext();\n\n  const detailsData = useMemo(\n    () => getMovieDetails({ id: movie_id }),\n    [movie_id]\n  );\n\n  useEffect(() => {\n    if (!movie_id) return;\n    async function fetchData() {\n      try {\n        const details = await detailsData;\n        setMovieDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    }\n\n    fetchData();\n  }, [detailsData, movie_id, setMovieDetails]);\n  console.log(location.state.from)\n  return (\n    <>\n      <StyledNavLink to={location.state.from ? location.state.from : '/'}>\n        <Btn>Go back</Btn>\n      </StyledNavLink>\n\n      <Img\n        src={\n          movieDetails.poster_path ? (\n            `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n          ) : (\n            <div>No image</div>\n          )\n        }\n        width={250}\n      />\n      <MainText>{movieDetails.original_title}</MainText>\n      <UserScored score={calculatePercentage(movieDetails.vote_average)}>\n        User Score: {calculatePercentage(movieDetails.vote_average)}%\n      </UserScored>\n      <SecondaryText>Overview: {movieDetails.overview}</SecondaryText>\n      <List>\n        Additional information:\n        <StyledNavLink to=\"cast\" state={{ from: location.state.from }}>\n          <Paragraph>Cast:</Paragraph>\n        </StyledNavLink>\n        <StyledNavLink to=\"reviews\" state={{from: location.state.from}}>\n          <Paragraph>Reviews:</Paragraph>\n        </StyledNavLink>\n      </List>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["calculatePercentage","score","Math","round","movie_id","useParams","UseGlobalContext","movieDetails","setMovieDetails","location","detailsData","useMemo","getMovieDetails","id","useEffect","details","console","error","message","fetchData","log","state","from","to","src","poster_path","width","original_title","vote_average","overview","Suspense","fallback"],"sourceRoot":""}