{"version":3,"file":"static/js/186.39f5e1f1.chunk.js","mappings":"kOA2DA,UA/CA,WACE,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0CE,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAChBC,GAAcC,EAAAA,EAAAA,UAClB,kBAAMC,EAAAA,EAAAA,IAAgB,CAAEC,GAAIR,GAA5B,GACA,CAACA,IAkBH,OAfAS,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6GAE0BJ,EAF1B,OAEUK,EAFV,OAGIN,EAAgBM,EAAQC,SAH5B,gDAKIC,QAAQC,MAAM,gCAAiC,KAAMC,SALzD,0DAHc,sBACTd,GADS,mCAYde,EACD,GAAE,CAACV,EAAaL,EAAUI,IAEtBY,MAAMC,QAAQd,IAKjB,SAAC,KAAD,UAC2B,IAAxBA,EAAae,QACZ,SAAC,KAAD,WACE,kEAGFf,EAAagB,KAAI,SAAAC,GAAI,OACnB,SAAC,KAAD,WACE,UAAC,KAAD,YACE,UAAC,KAAD,sBAA0BA,EAAKC,WAC/B,UAAC,KAAD,yBAAgCD,EAAKE,eAH1BF,EAAKZ,GADD,MAVlB,IAqBV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { getMovieReviews } from 'Api/Movie';\nimport { UseGlobalContext } from 'Context/stateContext';\nimport { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CommentContainer,\n  CommentatorName,\n  CommentatorComment,\n  List,\n  ListItem,\n} from 'ui/everyUi.styled';\n\nfunction Reviews() {\n  const { movie_id } = useParams();\n  const { movieReviews, setMovieReviews } = UseGlobalContext();\n  const reviewsData = useMemo(\n    () => getMovieReviews({ id: movie_id }),\n    [movie_id]\n  );\n\n  useEffect(() => {\n    if (!movie_id) return;\n\n    async function fetchData() {\n      try {\n        const reviews = await reviewsData;\n        setMovieReviews(reviews.results);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    }\n\n    fetchData();\n  }, [reviewsData, movie_id, setMovieReviews]);\n\n  if (!Array.isArray(movieReviews)) {\n    return null;\n  }\n\n  return (\n    <List>\n      {movieReviews.length === 0 ? (\n        <ListItem>\n          <p>No reviews available for this movie.</p>\n        </ListItem>\n      ) : (\n        movieReviews.map(item => (\n          <ListItem key={item.id}>\n            <CommentContainer>\n              <CommentatorName>Author: {item.author}</CommentatorName>\n              <CommentatorComment>Commented: {item.content}</CommentatorComment>\n            </CommentContainer>\n          </ListItem>\n        ))\n      )}\n    </List>\n  );\n}\n\nexport default Reviews;\n"],"names":["movie_id","useParams","UseGlobalContext","movieReviews","setMovieReviews","reviewsData","useMemo","getMovieReviews","id","useEffect","reviews","results","console","error","message","fetchData","Array","isArray","length","map","item","author","content"],"sourceRoot":""}