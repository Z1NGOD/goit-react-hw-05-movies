{"version":3,"file":"static/js/329.87b0b174.chunk.js","mappings":"wQAgFA,MApEA,WACE,OAAoDA,EAAAA,EAAAA,MAA5CC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAAiBC,EAAvC,EAAuCA,SACjCC,EAAcH,EAAaI,IAAI,UAAY,GAEjD,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeC,aAAaC,QAAQ,kBACtCF,GACFF,EAAUK,KAAKC,MAAMJ,GAExB,GAAE,IAEH,IAAMK,EAAkB,mCAAG,WAAMC,GAAN,0EACzBA,EAAEC,iBAEkB,KAAhBb,EAHqB,2EAMMc,EAAAA,EAAAA,IAAa,CAAEC,MAAOf,IAN5B,OAMjBgB,EANiB,OAOvBZ,EAAUY,EAAeC,SAEzBV,aAAaW,QACX,iBACAT,KAAKU,UAAUH,EAAeC,UAXT,kDAcvBG,QAAQC,MAAM,gCAAiC,KAAMC,SAd9B,0DAAH,sDA0BxB,OACE,iCACE,kBAAMC,SAAUZ,EAAhB,WACE,SAAC,KAAD,CACEa,SAZmB,SAAAZ,GACzB,IACMa,EADSb,EAAEc,OAAOC,MACQC,cAAcC,OAE1C/B,EADJ2B,EACoB,CAAEV,MAAOU,GACT,CAAC,EACtB,EAOOE,MAAO3B,EACP8B,YAAY,6BACZC,KAAK,OACLC,UAAQ,KAEV,SAAC,KAAD,CAAKD,KAAK,SAAV,wBAEF,SAAC,KAAD,UACG5B,EAAO8B,KAAI,SAAAC,GAAI,OACd,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,IAEpBC,MAAO,CAAEC,KAAMvC,EAASwC,UAH1B,UAKE,SAAC,KAAD,WACE,SAAC,KAAD,UAAaL,EAAKM,WAJfN,EAAKE,GAHE,QAcvB,ECnED,MARA,WACE,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/Movies/Movies.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Btn,\n  Input,\n  List,\n  ListItem,\n  NewFeature,\n  StyledNavLink,\n} from 'ui/everyUi.styled';\nimport { SearchMovies } from 'Api/Movie';\nimport { UseGlobalContext } from 'Context/stateContext';\n\nfunction Movies() {\n  const { searchParams, setSearchParams, location } = UseGlobalContext();\n  const searchQuery = searchParams.get('query') || '';\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const storedMovies = localStorage.getItem('searchedMovies');\n    if (storedMovies) {\n      setMovies(JSON.parse(storedMovies));\n    }\n  }, []);\n\n  const handleSearchSubmit = async e => {\n    e.preventDefault();\n\n    if (searchQuery === '') return;\n\n    try {\n      const searchedMovies = await SearchMovies({ query: searchQuery });\n      setMovies(searchedMovies.results);\n     \n      localStorage.setItem(\n        'searchedMovies',\n        JSON.stringify(searchedMovies.results)\n      );\n    } catch (error) {\n      console.error('Error fetching movie details:', error.message);\n    }\n  };\n\n  const handleSearchChange = e => {\n    const search = e.target.value;\n    const normalizedSearch = search.toLowerCase().trim();\n    normalizedSearch\n      ? setSearchParams({ query: normalizedSearch })\n      : setSearchParams({});\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSearchSubmit}>\n        <Input\n          onChange={handleSearchChange}\n          value={searchQuery}\n          placeholder=\"Search your favorite movie\"\n          type=\"text\"\n          required\n        />\n        <Btn type=\"submit\">Search</Btn>\n      </form>\n      <List>\n        {movies.map(item => (\n          <StyledNavLink\n            to={`/movies/${item.id}`}\n            key={item.id}\n            state={{ from: location.pathname }}\n          >\n            <ListItem>\n              <NewFeature>{item.title}</NewFeature>\n            </ListItem>\n          </StyledNavLink>\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport default Movies;\n","import Movies from 'components/Movies/Movies'\nimport React from 'react'\n\nfunction MoviesPage() {\n  return (\n    <>\n      <Movies/>\n    </>\n  )\n}\n\nexport default MoviesPage\n"],"names":["UseGlobalContext","searchParams","setSearchParams","location","searchQuery","get","useState","movies","setMovies","useEffect","storedMovies","localStorage","getItem","JSON","parse","handleSearchSubmit","e","preventDefault","SearchMovies","query","searchedMovies","results","setItem","stringify","console","error","message","onSubmit","onChange","normalizedSearch","target","value","toLowerCase","trim","placeholder","type","required","map","item","to","id","state","from","pathname","title"],"sourceRoot":""}